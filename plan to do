1.注意事項！！！
  a.排除旋轉後會使神經層的大小出現變化,以至superset和model不相容,皆須重新訓練
  b.思考論文貢獻
  c.修改loss function權重,考慮樂高條件後的差異or其他可變因素,輸出結果用於比較

2.待完成事情或瑕疵：
  a.找尋更合理且良好的 loss funtion 權重
  b.兩斜磚相鄰或合併時共用同一基本磚（＃1）
  c.在unity輸入頂點繪製多邊形以呈現圖案輪廓（未嘗試,但感覺須倍率放大）
  d.(ok)已完成加入54200的訓練，但未修改unity輸出寫檔的部份, 且54200的加入突顯面積的loss問題
  e.部份邊界習慣讀取斜磚但最因無法合併而讀入unity會突出，期望能修改以54200取代，或給予條件使無法合併的斜磚做其他處理
  f.嘗試切割圖形後重新拼裝

3.使輸出結果更好的方式：
  a.透過最佳化方式搜尋superset上的最好位置輸出訓練結果
  b.對輸出結果做做平滑化(刪除那些增加覆蓋率但使圖形不平滑的磚,ex：54200因為磚小常會發生)
  c.調整部份數值做transfer learning（可行度相對低）
  d.在一定程度下使樂高磚超出邊界, 以達到更好的覆蓋率或圖形相似度
  e.切割圖形(但圖形內部若有空洞要另外處理)

4.程式優化：
  a.每次加入新的磚要輸出就必須修改 brick_layout
   （解決方式：讀取所用的tile檔案名稱，其順序即為node_feature中one hot的紀錄順序,但反斜磚名字難處理）
  b.每次加入新的斜磚要排除第三邊或排除旋轉就必須修改 tile_graph
   （解決方式：讀取所用的tile檔案名稱，其順序即為node_feature中one hot的紀錄順序,但反斜磚名字難處理）
  c.在基本磚做merge時的穩定度分析並未加入斜磚做考量
  d.


比較：
a.不同loss funtion下的差異 + 有無樂高條件限制 (大小為7)(磚數為2)
  /正常            /無node_loss      /無樂高條件限制     /兩者皆無
  /lego-2.2        /lego-2.1         /lego-2.4(4016)
  /505.1596.732                    /12343.53121.3083847
  (lego-4.3 呈現了3個磚時,沒有樂高限制下會產生的驚人的superset,而且大小只有5)
  (lego-4.1 跟 lego-4 是在3個磚時大小為9,有無node_loss的差異，前者有後者無)
  /2465.16800.15840
b.磚的數量 (大小為4,6,11)
  /2:lego-2.2(ok) /169.480.228   /373.1152.532    /1233.4092.1852
  /3:lego-4.1(ok) /489.3040.2868 /1097.7180.6772  /3681.25466.24008
  /4:lego-8.3(ok) /652.3495.5743 /1447.8126.13658 /4708.27438.46662
  /5:lego-10(ok)  /750.4133.7158 /1681.9696.17135 /5516.32958.58892
  +趨勢圖（x:break_num, y:superset的大小）


需要額外儲存的資料：
1.superset和其對應的訓練後model（result-save）            （superset會被蓋過,model個別存在debug中）
2.基本磚做merge前的ldr檔（unity_use/example_model_merge） （ldr檔會被蓋過）
3.用在做訓練結果比較的固定節點（silhouette/compare_vertex）（個別存在debug中）


＃1：部份情況仍存在樂高磚, 如 2341, 3044b
     但在 lego-8.2 的情況下，在產生超集時排除兩斜磚左右相鄰，但未排除上下，因此在某些情況下仍會
     產生斜磚相鄰的情況，如：底下兩基本磚，上方各有一斜磚，兩個node間不存在edge但兩斜磚仍然相鄰

////////////////////////////////////////////////////////////////////////////////////////////////////////////
（過去紀錄）
(！！！排除旋轉後會使神經層的大小出現變化須整個重新訓練！！！)
(思考論文貢獻)
(思考如何找到最好的位置來獲得最相似之結果...最佳化?)
(思考為了得到更好的結果做平滑化,同一個地方多產幾次結果 or optimal輸出結果檢查不平滑部份使其平滑 or 調整部份數值做transfer learning)
(修改:在一定程度下使樂高磚超出邊界來獲得更相似的結果)
(修改 loss-function 的值)
(結果比較：比較修改loss function權重和在考慮樂高條件後的差異...或其他可變因素的不同)
(8.2 superset和其對應的訓練後model大小不同)

1. 排除以下情形：(事實上兩種情況仍存在樂高磚...詳見過去進度ppt-2020/10/30)
	a.(詳見3.)斜磚左右相鄰
	b.(暫不處理)兩斜磚合併時共用同一基本磚

2. unity輸出
	a.(完成)合併斜磚部份(考慮偏移及座標軸問題)
	b.(完成)依據穩定度分析來合併基本磚部份（須考慮接點問題）
	c.(完成)反斜磚問題
	d.(完成)環境切換
	e.輸入頂點繪製多邊形以呈現圖案輪廓（未嘗試,但感覺須倍率放大）
	f.(完成？)修改node_pos_test儲存位置
	g.加入考慮兩斜磚共用同一基本磚時的情況（lego-2341）
	h.(完成)(a.的衍生問題)原位置基本磚未刪除
	i.(完成)(c.的衍生問題)部份斜磚不存在反斜磚(ex.2x1x2-60481 ,2341 ,3044b ,54200)
	  考慮在產生超集時不加入這些樂高磚的旋轉情形

3. 在 lego-8.2 的情況下，在產生超集時排除兩斜磚左右相鄰，但未排除上下，因此在某些情況下仍會
   產生斜磚相鄰的情況，如：底下兩基本磚，上方各有一斜磚，兩個node間不存在edge但兩斜磚仍然相鄰

4. 已完成加入54200的訓練，但未修改unity輸出寫檔的部份, 且54200的加入突顯面積的loss問題

5. 以三角形為例，頂端習慣讀取斜磚但最因無法合併而突出，期望能修改以54200取代，或給予條件使無法合併的斜磚做其他處理

6. (完成)高度為2的斜磚合併時,原位置基本磚未刪除

7. (完成)寫座標位置檔，可同時用於"2-e"，以及未來做結果比較時在同一位置比較差異

